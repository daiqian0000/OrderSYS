
-- ----------------------------
-- Function structure for AREA_DOWN_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `AREA_DOWN_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `AREA_DOWN_RECURSIVE`(AREAID int) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE IDS TEXT;
	DECLARE TEMP TEXT;

	SET IDS = '$';
	SET TEMP = CAST(AREAID AS CHAR);

	WHILE TEMP IS NOT NULL DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT GROUP_CONCAT(ID) INTO TEMP FROM LOC_AREA WHERE FIND_IN_SET(PARENT_ID, TEMP) > 0;
	END WHILE;

	RETURN IDS;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for AREA_UP_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `AREA_UP_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `AREA_UP_RECURSIVE`(`AREAID` int) RETURNS text CHARSET utf8
BEGIN
	
	DECLARE IDS TEXT;
	DECLARE TEMP TEXT;

	SET IDS = '$';
	SET TEMP = CAST(AREAID AS CHAR);
	SET IDS = CONCAT(IDS, ',', TEMP);
		
	SELECT PARENT_ID INTO TEMP FROM LOC_AREA WHERE ID = TEMP;

	WHILE TEMP <> 0 DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT PARENT_ID INTO TEMP FROM LOC_AREA WHERE ID = TEMP;
	END WHILE;

	RETURN IDS;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for MENU_DOWN_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `MENU_DOWN_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `MENU_DOWN_RECURSIVE`(MENUID VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN
 
	DECLARE IDS TEXT;
	DECLARE TEMP TEXT;

	SET IDS = '$';
	SET TEMP = MENUID;

	WHILE TEMP IS NOT NULL DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT GROUP_CONCAT(MENU_ID) INTO TEMP FROM LOC_MENU WHERE FIND_IN_SET(PARENT_ID, TEMP) > 0;
	END WHILE;

	RETURN IDS;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for MENU_PATH_BY_PER
-- ----------------------------
DROP FUNCTION IF EXISTS `MENU_PATH_BY_PER`;
DELIMITER ;;
CREATE FUNCTION `MENU_PATH_BY_PER`(PER_FLAG VARCHAR(50)) RETURNS varchar(4000) CHARSET utf8
BEGIN

	DECLARE FULLNAME VARCHAR(4000);
	DECLARE TEMP_ID VARCHAR(50);
	DECLARE TEMP_NAME VARCHAR(50);

	SELECT MENU_ID INTO TEMP_ID FROM LOC_MENU WHERE PERMISSION = PER_FLAG LIMIT 1;
	SELECT NAME INTO TEMP_NAME FROM LOC_MENU WHERE PERMISSION = PER_FLAG LIMIT 1;

	SET FULLNAME = TEMP_NAME;

	WHILE TEMP_ID <> '0' DO
		SELECT PARENT_ID INTO TEMP_ID FROM LOC_MENU WHERE MENU_ID = TEMP_ID LIMIT 1;
		SELECT NAME INTO TEMP_NAME FROM LOC_MENU WHERE MENU_ID = TEMP_ID LIMIT 1;
		IF TEMP_ID <> '0' THEN
			SET FULLNAME = CONCAT(TEMP_NAME, '-', FULLNAME);
		END IF;
	END WHILE;

	RETURN FULLNAME;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for MENU_UP_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `MENU_UP_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `MENU_UP_RECURSIVE`(MENUID VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN

 DECLARE IDS TEXT;
 DECLARE TEMP TEXT;

 SET IDS = '$';
 SET TEMP = MENUID;
 SET IDS = CONCAT(IDS, ',', TEMP);

 SELECT PARENT_ID INTO TEMP FROM LOC_MENU WHERE MENU_ID = TEMP;
 
	WHILE TEMP <> 0 DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT PARENT_ID INTO TEMP FROM LOC_MENU WHERE MENU_ID = TEMP;
	END WHILE;
	
	RETURN IDS;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for ORG_DOWN_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `ORG_DOWN_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `ORG_DOWN_RECURSIVE`(ORGID VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN
 
	DECLARE IDS TEXT;
	DECLARE TEMP TEXT;

	SET IDS = '$';
	SET TEMP = ORGID;

	WHILE TEMP IS NOT NULL DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT GROUP_CONCAT(ORG_ID) INTO TEMP FROM LOC_ORG WHERE FIND_IN_SET(PARENT_ID, TEMP) > 0;
	END WHILE;

	RETURN IDS;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for ORG_UP_RECURSIVE
-- ----------------------------
DROP FUNCTION IF EXISTS `ORG_UP_RECURSIVE`;
DELIMITER ;;
CREATE FUNCTION `ORG_UP_RECURSIVE`(ORGID VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN

 DECLARE IDS TEXT;
 DECLARE TEMP TEXT;

 SET IDS = '$';
 SET TEMP = ORGID;
 SET IDS = CONCAT(IDS, ',', TEMP);

 SELECT PARENT_ID INTO TEMP FROM LOC_ORG WHERE ORG_ID = TEMP;
 
	WHILE TEMP <> 0 DO
		SET IDS = CONCAT(IDS, ',', TEMP);
		SELECT PARENT_ID INTO TEMP FROM LOC_ORG WHERE ORG_ID = TEMP;
	END WHILE;
	
	RETURN IDS;

END
;;
DELIMITER ;
